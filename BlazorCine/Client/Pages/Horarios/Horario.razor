@page "/horario"
@page "/horario/{id:int}"
@using BlazorCine.Shared.DTOs.Horarios;
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>Horario</h3>

<EditForm Model="horario" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <label>
        <div class="col-lg-12">
            <div class="mb-3">
             <label class="form-label">Id</label>
             <InputNumber id="Id" class="form-control" @bind-Value="@horario.Id" />
             <ValidationMessage For="@(() => horario.Id)" />
            </div>
        </div>
    </label>

     <div class="col-lg-12">
        <div class="mb-3">
           <label class="form-label">Hora</label>
            <InputNumber id="Hora" class="form-control" @bind-Value="@horario.Hora" />
            <ValidationMessage For="@(() => horario.Hora)" />
        </div>
    </div>

    <div class="col-1g-12 text-end mb-3 pt-4">
        <hr />
        <button type="button" class="btn btn-danger" onclick="history.back()">Cancelar</button>
        <button type="submit" class="btn btn-success">Guardar</button>
    </div>

</EditForm>

@code {
    protected HorarioDTO horario = new HorarioDTO();
    [Parameter] public int id { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        if (id > 0)
        {
            var response = await httpClient.GetFromJsonAsync<HorarioDTO>($"api/horarios/{id}");
            if (response != null)
            {
                horario = response;
            }
        }
    }

    private async Task OnValidSubmit()
    {
        if (id > 0)
        {
            await httpClient.PutAsJsonAsync<HorarioDTO>("api/horarios", horario);
        }
        else
        {
            await httpClient.PostAsJsonAsync<HorarioDTO>("api/horarios", horario);
        }

        navigationManager.NavigateTo("horarios");
    }
}
