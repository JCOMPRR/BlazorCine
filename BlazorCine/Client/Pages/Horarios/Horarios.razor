@page "/horario"
@using BlazorCine.Shared.DTOs.Horarios;
@inject NavigationManager navigationManager
@inject HttpClient httpClient

<h3>Horarios</h3>

<div class="row justify-content-end">
    <div class="col-lg-3 text-end">
        <button type="button" class="btn btn-success" @onclick=@(() => navigationManager.NavigateTo("Horario"))>Agregar</button>
    </div>
</div>

if (horarios == null)
{
    <h1>Cargando...</h1>
}
else if (horarios.Count == 0)
{
    <h1>No se encontraron funciones registradas...</h1>
}
else
{
    <div class="table-responsive">
        <table class="table text-center table-hover">
            <thead class="table-striped">
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Hora</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var horario in horarios)
                {
                    <tr>
                        <td>@horario.Id</td>
                        <td>@horario.Hora</td>

                        <td>
                            <button class="btn btn-primary" type="button" @onclick=@(() => navigationManager.NavigateTo($"horario/{horario.Id}"))>Editar</button>
                            <button class="btn btn-danger" type="button" @onclick="@(() => Eliminar(horario))">Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    protected List<HorarioDTO> horarios = new List<HorarioDTO>();

    //public Horarios(List<HorarioDTO> horarios)
    //{
    //    this.horarios = horarios;
    //}

    protected override async Task OnInitializedAsync()
    {
        var response = await httpClient.GetFromJsonAsync<List<HorarioDTO>>("api/horarioDTO");
        if (response != null)
        {
            horarios = response;
        }
    }

    protected async Task Eliminar(HorarioDTO horario)
    {
        await httpClient.DeleteAsync($"api/horarios/{horario.Id}");
        horarios.Remove(horario);
    }
}
