@page "/peliculas"
@using BlazorCine.Shared.DTOs.Peliculas;
@inject NavigationManager navigationManager
@inject HttpClient httpClient

<h3>Peliculas</h3>

<div class="row justify-content-end">
    <div class="col-lg-3 text-end">
        <button type="button" class="btn btn-success" @onclick=@(() => navigationManager.NavigateTo("Pelicula"))>Agregar</button>
    </div>
</div>

    <div class="table-responsive">
        <table class="table text-center table-hover">
            <thead class="table-striped">
                <tr>
                    <th scope="col">Nombre</th>
                    <th scope="col">Duracion</th>
                    <th scope="col">Idioma</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pelicula in peliculas)
                {
                    <tr>
                        <td>@pelicula.Id</td>
                        <td>@pelicula.Nombre</td>
                        <td>@pelicula.Duracion</td>
                        <td>@pelicula.Idioma</td>

                        <td>
                            <button class="btn btn-primary" type="button" @onclick=@(() => navigationManager.NavigateTo($"pelicula/{pelicula.Id}"))>Editar</button>
                            <button class="btn btn-danger" type="button" @onclick="@(() => Eliminar(pelicula))">Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

@code {
    protected List<PeliculaDTO> peliculas = new List<PeliculaDTO>();

    protected override async Task OnInitializedAsync()
    {
        var response = await httpClient.GetFromJsonAsync<List<PeliculaDTO>>("api/Peliculas");
        if (response != null)
        {
            peliculas = response;
        }
    }

    protected async Task Eliminar(PeliculaDTO pelicula)
    {
        await httpClient.DeleteAsync($"api/peliculas/{pelicula.Id}");
        peliculas.Remove(pelicula);
    }
}
